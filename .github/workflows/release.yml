name: Build and Release Flutter APK

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
      new_version: ${{ steps.check.outputs.new_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get previous pubspec.yaml
        run: |
          git fetch origin main --depth=2
          git show HEAD^:pubspec.yaml > pubspec_old.yaml || echo "no previous pubspec" > pubspec_old.yaml

      - name: Check if version changed
        id: check
        shell: bash
        run: |
          old_version=$(grep '^version:' pubspec_old.yaml | sed 's/version: //')
          new_version=$(grep '^version:' pubspec.yaml | sed 's/version: //')

          echo "Old version: $old_version"
          echo "New version: $new_version"

          if [ "$old_version" != "$new_version" ] && [ -n "$new_version" ]; then
            # Записуємо у $GITHUB_OUTPUT у лапках для безпечного оброблення +
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$new_version" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

  build-and-release:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'

      - name: Install dependencies
        run: flutter pub get

      - name: Generate temporary keystore (CI test key)
        run: |
          mkdir -p android
          keytool -genkeypair \
            -v \
            -keystore android/test.keystore \
            -storepass 123456 \
            -alias testkey \
            -keypass 123456 \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=Test, OU=Test, O=Test, L=Test, S=Test, C=US"

      - name: Build release APK
        run: flutter build apk --release --target-platform android-arm,android-arm64,android-x64 --android-skip-build-dependency-validation

      - name: Extract tag version
        id: extract_tag
        run: |
          full_version="${{ needs.check-version.outputs.new_version }}"
          tag_version="${full_version%%+*}"
          echo "tag_version=$tag_version" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.extract_tag.outputs.tag_version }}
          name: "v${{ steps.extract_tag.outputs.tag_version }}"
          body: "Release of version v${{ steps.extract_tag.outputs.tag_version }} for ${{ github.repository }}."
          files: build/app/outputs/flutter-apk/app-release.apk
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
